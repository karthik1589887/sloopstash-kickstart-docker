pipeline {
    agent any
    environment {
        DOCKER_REPO = "karthik2502"
        CREDENTIALS_ID = "dockerhub_credentials"
    }
    stages {
        stage('CI: Download sources') {
            steps {
                sh 'git clone https://github.com/karthik1589887/sloopstash-kickstart-docker.git kickstart-docker'
            }
        }
        stage('CI: Build OCI images') {
            steps {
                dir('kickstart-docker/test-image') {
                    script {
                        // List top-level directories (e.g., base, nginx, python, redis)
                        def folders = sh(script: "ls -d image/*/", returnStdout: true).trim().split('\n')

                        // Loop through each folder
                        folders.each { folder ->
                            // List all versions inside each folder
                            def versions = sh(script: "ls ${folder}", returnStdout: true).trim().split('\n')

                            // Loop through each version
                            versions.each { version ->
                                def imageName = folder.replace('image/', '').replace('/', '')  // e.g., 'nginx'
                                def imageTag = "${imageName}:${version}"  // e.g., 'nginx:1.14.0'
                                def dockerfilePath = "${folder}${version}/amazon-linux-2.dockerfile"
                                def buildContext = "${folder}${version}/context"

                                // Build Docker image
                                sh """
                                    echo 'Building ${DOCKER_REPO}/${imageTag}'
                                    sudo docker image build -t ${DOCKER_REPO}/${imageTag} -f ${dockerfilePath} ${buildContext}
                                """
                            }
                        }
                    }
                }
            }
        }
        stage('CI: Push OCI images') {
            steps {
                script {
                    // Push all images after building
                    def folders = sh(script: "ls -d image/*/", returnStdout: true).trim().split('\n')

                    folders.each { folder ->
                        def versions = sh(script: "ls ${folder}", returnStdout: true).trim().split('\n')

                        versions.each { version ->
                            def imageName = folder.replace('image/', '').replace('/', '')  // e.g., 'nginx'
                            def imageTag = "${imageName}:${version}"

                            // Push Docker image
                            sh """
                                echo 'Pushing ${DOCKER_REPO}/${imageTag}'
                                sudo docker login -u $DOCKER_USER -p $DOCKER_PASS
                                sudo docker push ${DOCKER_REPO}/${imageTag}
                            """
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Cleaning up...'
            sh 'sudo docker system prune -f'
        }
    }
}
